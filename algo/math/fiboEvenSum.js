/**
 * @name fiboEvenSum
 * @description Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed n,
 * find the sum of the even-valued terms.
 * @example fiboEvenSum(10) -> 10.
 * For number 10, the Fibonacci sequence is 1, 2, 3, 5, 8, 13, 21, 34, 55, 89. Its even numbers that do not exceed n, 10 in this case are 2, 8, so the sum is 10.
 * @param {number} n
 * @returns {number} The sum of even numbers that do not exceed n in a Fibonacci sequence.
 * @solution Generate a Fibonacci sequence and add up the even numbers that do not exceed n.
 * @source https://www.freecodecamp.org/learn/project-euler/project-euler-problems-1-to-100/problem-2-even-fibonacci-numbers
 */
function solution(n) {
  if (!n >= 1) {
    throw new Error("n must be a positive number");
  }
  if (n === 1) return 0;
  if (n === 2) return 2;
  let sum = 2; // The sum starts from 2.
  const fiboArr = [1, 2];
  for (let i = 2; i <= n; i++) {
    const res = fiboArr[i - 1] + fiboArr[i - 2];
    if (res % 2 === 0 && res <= n) {
      sum += res;
    }
    fiboArr.push(res);
  }
  return sum;
}

module.exports = { solution };
